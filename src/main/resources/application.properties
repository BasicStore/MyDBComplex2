# Enabling H2 Console
spring.h2.console.enabled=true


# HIBERNATE LOGGING AND TRACING DEFINED HERE:
#Turn Statistics on
spring.jpa.properties.hibernate.generate_statistics=true
logging.level.org.hibernate.stat=debug

# Show all queries
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.type=trace


#spring.jpa.generate-dll=true
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.datasource.url=jdbc:mysql://localhost:3306/incident_records
#spring.datasource.driver-class=com.mysql.jdbc.Driver
#spring.datasource.username=dilley
#spring.datasource.password=GrahamD1ll3y!

spring.jpa.hibernate.ddl-auto=create
spring.datasource.url=jdbc:mysql://localhost:3306/incident_records
spring.datasource.username=dilley
spring.datasource.password=GrahamD1ll3y!




# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

# Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto = update

#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type=TRACE




    #  ddl-auto values:  presumably use update  [default is NONE]
    #none   This is the default for MySQL, no change to the database structure.
    #update Hibernate changes the database according to the given Entity structures.
    #create Creates the database every time, but don\u2019t drop it when close.
    #create-drop Creates the database then drops it when the SessionFactory closes.


